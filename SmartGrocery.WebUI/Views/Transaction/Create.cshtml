@using SmartGrocery.WebUI.Models.Transactions

@model TransactionDetailsViewModel

@{
	var aws = new SelectListItem
	{
		Value = "AWS",
		Text = "AWS Recognition"
	};
	var emotionTool = new SelectListItem
	{
		Value = "EmotionDetection",
		Text = "Emotion Detection"
	};

	var emotionTools = new List<SelectListItem>();
	emotionTools.Add(aws);
	emotionTools.Add(emotionTool);
}

@using (Html.BeginForm("Create", "Transaction", FormMethod.Post, new { enctype = "multipart/form-data", id = "create-transacion-form", data_failure = "onFailure" }))
{
	<h3>New Transaction</h3>
	<div class="section-container">
		@Html.HiddenFor(x => x.CreatedBy)
		@Html.HiddenFor(x => x.LastUpdatedBy)
		<div class="row">
			<div class="col-md-3 form-group required">
				@Html.LabelFor(x => x.TransactionNumber, new { @class = "form-label" })
				@Html.TextBoxFor(x => x.TransactionNumber, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.TransactionNumber)
			</div>
			<div class="col-md-offset-1 col-md-3 form-group">
				@Html.LabelFor(x => x.CreatedAt, new { @class = "form-label" })
				<p>@Model.CreatedAt</p>
			</div>
		</div>

		<div class="row">
			<div class="col-md-3 form-group">
				@Html.LabelFor(x => x.CustomerId, new { @class = "form-label" })
				<div class="input-group">
					@Html.TextBoxFor(x => x.CustomerId, new { @class = "form-control" })
					<span class="input-group-addon clickable" id="search-customer-id">
						<i class="input-group glyphicon glyphicon-search"></i>
					</span>
				</div>
				@Html.ValidationMessageFor(x => x.CustomerId)
			</div>
			<div class="col-md-3 col-md-offset-1 form-group">
				@Html.LabelFor(x => x.CustomerName, new { @class = "form-label" })
				@Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control" })
			</div>
			<div class="col-md-3 col-md-offset-1 form-group">
				@Html.LabelFor(x => x.CustomerEmotion, new { @class = "form-label" })
				@Html.TextBoxFor(x => x.CustomerEmotion, new { @class = "form-control", @readonly = "readonly" })
			</div>
			@Html.HiddenFor(x => x.CustomerEmotionProbability)
		</div>

		<div class="row">
			<div class="col-md-3 form-group">
				@Html.LabelFor(x => x.Amount, new { @class = "form-label" })
				<div class="input-group">
					@Html.TextBoxFor(x => x.Amount, new { @class = "form-control", @readonly = "readonly" })
					<span class="input-group-addon clickable" id="calculate-total-price">
						<i class="input-group glyphicon glyphicon-usd"></i>
					</span>
				</div>
				@Html.ValidationMessageFor(x => x.Amount)
			</div>
		</div>

		<div class="row">
			<div class="col-md-11 form-group">
				<table id="products-table" class="table table-hover table-bordered">
					<thead>
						<tr>
							<th class="col-sm-3">Product Number</th>
							<th class="col-sm-3">Product Name</th>
							<th class="col-md-2">Amount</th>
							<th class="col-md-2">Cost</th>
							<th class="col-md-1"></th>
						</tr>
					</thead>
					<tbody>
						@for (var i = 0; i < Model.ProductSnapshots.Length; i++)
						{
							@Html.EditorFor(m => m.ProductSnapshots[i], "_ProductSnapshot")
						}
					</tbody>
					<tfoot>
						<tr>
							<td colspan="5" style="text-align: left;">
								<input type="button" class="btn btn-sm btn-block " id="add-row" value="Add Row" />
							</td>
						</tr>
					</tfoot>
				</table>
			</div>
		</div>

		<div class="row">
			<div class="col-md-2 form-group">
				@Html.Label("Emotion Tool", new { @class = "form-label" })
				@Html.DropDownList("emotionTool", emotionTools, new { @class = "form-control" })
			</div>
		</div>

		<div class="row">
			<div @*class="left"*@ class="col-md-2 form-group">
				<div id="start" class="button">
					Start
				</div>
				<h2>Preview</h2>
				<video id="video" controls="controls" autoplay muted></video>
			</div>
			<div @*class="right"*@ class="col-md-2 form-group">
				<div id="stopButton" class="button">
					Stop
				</div>
				<canvas id="canvas" hidden></canvas>
			</div>
			<div class="col-md-8 form-group" style="margin-top:100px">
				<div class="row">
					<div class="col-md-1">
						@Html.Label("Positive")
					</div>
					<div class="col-md-11">
						<div class="progress">
							<div id="positive-emotion-progress-bar" class="progress-bar" role="progressbar"></div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-1">
						@Html.Label("Neural")
					</div>
					<div class="col-md-11">
						<div class="progress">
							<div id="neural-emotion-progress-bar" class="progress-bar" role="progressbar"></div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-1">
						@Html.Label("Negative")
					</div>
					<div class="col-md-11">
						<div class="progress">
							<div id="negative-emotion-progress-bar" class="progress-bar" role="progressbar"></div>
						</div>
					</div>
				</div>
			</div>
			<div class=""></div>
			<div class="bottom">
				<pre id="log" style="overflow-y:scroll;max-height: 100px;"></pre>
			</div>
		</div>
		@*<div class="row form-group">
				<button type="submit" class="btn btn-success">Confirm</button>
			</div>*@
	</div>
}

@section scripts{
	@Scripts.Render("~/bundles/transactions")
	<script src="@Url.Content("~/Scripts/jquery.webcam.js")">
	</script>
	<script>
		initilize();
	</script>
}